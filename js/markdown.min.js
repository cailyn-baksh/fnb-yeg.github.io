let genUniqueID=()=>Number((Math.floor(65536*Math.random())<<16|65535&Date.now())>>>0).toString(16);class MarkupEntity{constructor(tag,attributes={}){this.tag=tag,this.attributes=attributes}generateEntity(){return""}}class TextEntity extends MarkupEntity{constructor(content){super(null),this.content=this._escapeString(content)}_escapeString(str){return str=(str=(str=str.replace(/&(?!.*?;)/g,"&amp;")).replace(/</g,"&lt;")).replace(/>/g,"&gt;")}addContent(content){this.content+=this._escapeString(content)}generateEntity(){return this.content}}class TerminatingEntity extends MarkupEntity{generateEntity(){let attributeString="";for(let[key,value]of Object.entries(this.attributes))attributeString+=null!==value?` ${key}="${value}"`:` ${key}`;return`<${this.tag}${attributeString} />`}}class NestableEntity extends MarkupEntity{constructor(tag,attributes={},childAttributes={}){super(tag,attributes),this.childAttributes=childAttributes,this.children=[]}addChild(child){if(Object.keys(this.childAttributes).includes(child.tag))for(let attrib of Object.keys(this.childAttributes[child.tag]))child.attributes[attrib]=(child.attributes[attrib]?child.attributes[attrib]:"")+this.childAttributes[child.tag][attrib];return this.children.push(child),this}get lastChild(){return this.children[this.children.length-1]}set lastChild(child){this.children[this.children.length-1]=child}generateEntity(){let attributeString="";for(let[key,value]of Object.entries(this.attributes))attributeString+=null!==value?` ${key}="${value}"`:` ${key}`;let generated=[];for(let child of this.children)generated.push(child.generateEntity());return`<${this.tag}${attributeString}>${generated.join("")}</${this.tag}>`}}class BootstrapEntities{static card(properties){let card=new NestableEntity("div",{class:"card"}),headerEntity=new NestableEntity("h3",{class:"card-header"});return applyInlineFormatting(headerEntity,properties.header),card.addChild(headerEntity),card.addChild(new NestableEntity("div",{class:"card-body"},{p:{class:"mb-1"}})),card}static imgCard(properties){let card=new NestableEntity("div",{class:"card"});card.addChild(new NestableEntity("img",{src:properties.src,alt:properties.alt,class:"card-img-top"}));let cardBody=new NestableEntity("div",{class:"card-body"},{p:{class:"mb-1"}}),cardTitleDiv=new NestableEntity("div",{class:"d-flex w-100 justify-content-between"});cardBody.addChild(cardTitleDiv);let cardTitle=new NestableEntity("h5",{class:"mb-1"});if(applyInlineFormatting(cardTitle,properties.title),cardTitleDiv.addChild(cardTitle),properties.date){let cardDate=new NestableEntity("small");applyInlineFormatting(cardDate,properties.date),cardTitleDiv.addChild(cardDate)}return card.addChild(cardBody),card}static imgCardCollapse(properties){let card=new NestableEntity("div",{class:"card"});card.addChild(new NestableEntity("img",{src:properties.src,alt:properties.alt,class:"card-img-top"}));let collapseID=genUniqueID(),cardBody=new NestableEntity("div",{class:"card-body"});return cardBody.addChild(new NestableEntity("p").addChild(new NestableEntity("a",{"data-toggle":"collapse",href:`#${collapseID}`,role:"button","aria-expanded":"false","aria-controls":collapseID}).addChild(new TextEntity("[View Image Transcription]")))),cardBody.addChild(new NestableEntity("div",{class:"collapse",id:collapseID})),card.addChild(cardBody),card}}function parseMarkdown(markdown,root,tagClasses){const NONE=0,PARAGRAPH=1,UL=2,OL=3,TABLE=4,QUOTE=5,imageRegex=/^!\[([^\]]+)\]\(([^"]+?)\)$/,ulRegex=/^([ \t]*?)([-*])[ \t](.*)$/,olRegex=/^([ \t]*?)(\d+|[a-zA-Z])\.[ \t](.*)$/,tableRegex=/\|(.+?)(?=\|)/g,tableFmtRegex=/\|([:-]{3,})(?=\|)/g,blockquoteRegex=/^>[\s]*(.*)/,blockquoteAttributionRegex=/^\s*-{1,2}(.*)$/,LEFT=0,CENTER=1,RIGHT=2;let parent=null,parentType=0,listIndent=0,columnAlignment=[];for(let i=0;i<markdown.length;++i){let line=markdown[i],match;if(""!==line)if("---"!==line){if("!"===line[0]){if(null!==(match=imageRegex.exec(line))){let element=new TerminatingEntity("img",{alt:match[1],src:match[2]});root.addChild(element);continue}}else line[0];if(0===parentType||1===parentType)if(null!==(match=ulRegex.exec(line))){let classString=getListClasses("ul",match[2]);parent=new NestableEntity("ul",{class:classString});let element=new NestableEntity("li");listIndent=match[1].length,applyInlineFormatting(element,match[3]),parent.addChild(element),root.addChild(parent),parentType=2}else if(null!==(match=olRegex.exec(line))){let classString=getListClasses("ol",match[2]);parent=new NestableEntity("ol",{class:classString});let element=new NestableEntity("li");applyInlineFormatting(element,match[3]),parent.addChild(element),root.addChild(parent),parentType=3}else if(null!==line.match(tableRegex)){if(null!==markdown[i+1].match(tableFmtRegex)){parent=new NestableEntity("table",{class:"table table-bordered"});let head=new NestableEntity("thead"),row=new NestableEntity("tr");for(;null!==(match=tableFmtRegex.exec(markdown[i+1]));){let lastIndex=match[1].length-1;":"===match[1][0]&&":"===match[1][lastIndex]?columnAlignment.push(1):":"===match[1][lastIndex]?columnAlignment.push(2):columnAlignment.push(0)}let column=0;for(;null!==(match=tableRegex.exec(line));){let style;switch(columnAlignment[column]){case 0:style="text-align: left;";break;case 1:style="text-align: center;";break;case 2:style="text-align: right;"}let cell=new NestableEntity("th",{style:style});applyInlineFormatting(cell,match[1].trim()),row.addChild(cell),++column}head.addChild(row),parent.addChild(head),root.addChild(parent),++i,parentType=4}}else if(">"===line[0]){parent=new NestableEntity("blockquote");let body=new NestableEntity("div",{class:"quote-body"}),paragraph=new NestableEntity("p"),match;applyInlineFormatting(paragraph,blockquoteRegex.exec(line)[1]),body.addChild(paragraph),parent.addChild(body),root.addChild(parent),parentType=5}else{let level=0;for(;"#"===line[level];++level);if(line=line.slice(level),1===parentType){if(0!==level){parentType=0,--i;continue}applyInlineFormatting(parent," "+line)}else 0===level?(parent=new NestableEntity("p"),parentType=1):parent=new NestableEntity(`h${level}`),applyInlineFormatting(parent,line),root.addChild(parent),parent=0===level?parent:null}else if(2===parentType){if(null===(match=ulRegex.exec(line))){parentType=0,listIndent=0,--i;continue}{let lineIndent=listItem("ul",parent,match,listIndent);lineIndent>listIndent&&(listIndent=lineIndent,parent=parent.lastChild)}}else if(3===parentType){if(null===(match=olRegex.exec(line))){parentType=0,listIndent=0,--i;continue}{let newIndent=listItem("ol",parent,match,listIndent);newIndent>listIndent&&(listIndent=newIndent,parent=parent.lastChild)}}else if(4===parentType){if(null===line.match(tableRegex)){parentType=0,--i;continue}{let body=new NestableEntity("tbody"),row=new NestableEntity("tr"),column=0;for(;null!==(match=tableRegex.exec(line));){let style;switch(columnAlignment[column]){case 0:style="text-align: left;";break;case 1:style="text-align: center;";break;case 2:style="text-align: right;"}let cell=new NestableEntity("td",{style:style});applyInlineFormatting(cell,match[1].trim()),row.addChild(cell),++column}body.addChild(row),parent.addChild(body)}}else if(5===parentType)if(null!==(match=blockquoteRegex.exec(line))){let paragraph=new NestableEntity("p");applyInlineFormatting(paragraph,match[1]),parent.lastChild.addChild(paragraph)}else{if(null===(match=blockquoteAttributionRegex.exec(line))){parentType=0,--i;continue}{let attribution=new NestableEntity("div",{class:"quote-attrib"});applyInlineFormatting(attribution,match[1]),parent.addChild(attribution),parentType=0}}}else root.addChild(new TerminatingEntity("hr"));else parentType=0}return root}function applyInlineFormatting(parent,line){const boldRegex=/(.*?)\*{2}(.*?)\*{2}(?!\*)(.*)/,italicRegex=/(.*?)\*(.*?)\*(.*)/,underlineRegex=/(.*?)_{2}(.*?)_{2}(.*)/,preformattedRegex=/(.*?)`(.*?)`(.*)/,superscriptRegex=/(.*?)\^\((.*?)\)(.*)/,subscriptRegex=/(.*?)\_\((.*?)\)(.*)/,linkForm1=/(.*?(?:^|[^!^]))\[([^\]]+)\]\(([^"]+?)\)(.*)/,linkForm2=/(.*?(?:^|[^!^]))\[([^\]]+)\]\(([^")]+?) "(.+?)"\)(.*)/,linkForm3=/(.*?)<([a-zA-Z0-9]+:\/\/[\w-.]+?.[\w-]+)>(.*)/,emailLink=/(.*?)<([a-zA-Z0-9!#$%&'*+-\/=?^_`{|}~.]+@[\w-.]+?.[\w-]+)>(.*)/g;let match;if(null!==(match=boldRegex.exec(line))){applyInlineFormatting(parent,match[1]);let element=new NestableEntity("b");return applyInlineFormatting(element,match[2]),parent.addChild(element),void applyInlineFormatting(parent,match[3])}if(null!==(match=italicRegex.exec(line))){applyInlineFormatting(parent,match[1]);let element=new NestableEntity("i");return applyInlineFormatting(element,match[2]),parent.addChild(element),void applyInlineFormatting(parent,match[3])}if(null!==(match=underlineRegex.exec(line))){applyInlineFormatting(parent,match[1]);let element=new NestableEntity("u");return applyInlineFormatting(element,match[2]),parent.addChild(element),void applyInlineFormatting(parent,match[3])}if(null!==(match=preformattedRegex.exec(line))){applyInlineFormatting(parent,match[1]);let element=new NestableEntity("code");return element.addChild(new TextEntity(match[2])),parent.addChild(element),void applyInlineFormatting(parent,match[3])}if(null!==(match=superscriptRegex.exec(line))){applyInlineFormatting(parent,match[1]);let element=new NestableEntity("sup");return applyInlineFormatting(element,match[2]),parent.addChild(element),void applyInlineFormatting(parent,match[3])}if(null!==(match=subscriptRegex.exec(line))){applyInlineFormatting(parent,match[1]);let element=new NestableEntity("sub");return applyInlineFormatting(element,match[2]),parent.addChild(element),void applyInlineFormatting(parent,match[3])}if(null!==(match=linkForm1.exec(line))){applyInlineFormatting(parent,match[1]);let element=new NestableEntity("a",{href:match[3]});return applyInlineFormatting(element,match[2]),parent.addChild(element),void applyInlineFormatting(parent,match[4])}if(null!==(match=linkForm2.exec(line))){applyInlineFormatting(parent,match[1]);let element=new NestableEntity("a",{href:match[3],title:match[4]});return applyInlineFormatting(element,match[2]),parent.addChild(element),void applyInlineFormatting(parent,match[5])}if(null!==(match=linkForm3.exec(line))){applyInlineFormatting(parent,match[1]);let element=new NestableEntity("a",{href:match[2]});return element.addChild(new TextEntity(match[2])),parent.addChild(element),void applyInlineFormatting(parent,match[3])}if(null!==(match=emailLink.exec(line))){applyInlineFormatting(parent,match[1]);let element=new NestableEntity("a",{href:`mailto:${match[2]}`});return element.addChild(new TextEntity(encodeEmail(match[2]))),parent.addChild(element),void applyInlineFormatting(parent,match[3])}parent.addChild(new TextEntity(line))}function listItem(tag,parent,match,indent){if(match[1].length>indent){indent=match[1].length;let sublist=new NestableEntity(tag),element=new NestableEntity("li");applyInlineFormatting(element,match[3]),sublist.addChild(element),parent.addChild(sublist)}else{let element=new NestableEntity("li");applyInlineFormatting(element,match[3]),parent.addChild(element)}return indent}function getListClasses(tag,marker){let chars=marker.split().map(e=>e.codePointAt(0));if("ol"===tag){if(chars[0]>=97&&chars[0]<=122)return"list-latin-lower";if(chars[0]>=65&&chars[0]<=90)return"list-latin-upper";if(chars.every(v=>v>=48&&v<=57))return"list-arabic"}else if("ul"===tag&&45===chars[0])return"list-dashed";return""}function encodeEmail(email){let encoded="";for(let i=0;i<email.length;++i)encoded+=`&#${email.charCodeAt(i)};`;return encoded}document.addEventListener("DOMContentLoaded",(async function(){let root=window.location.href;root=root.slice(0,root.lastIndexOf("/"));let manifestReq=await fetch(root+"/manifest.json",{mode:"same-origin"});if(manifestReq.ok){let manifest=await manifestReq.json(),getMarkdown=async src=>await fetch(src,{mode:"same-origin"}).then(response=>response.text().then(text=>text.replace("\r","").split("\n")));for(let target in manifest.targets){let targetDiv=document.querySelector(`div.markdown-target#${target}`);for(let entry of manifest.targets[target]){if(!1 in entry)continue;let root;if("card"===entry.type){root=BootstrapEntities.card(entry.properties);let markdown=await getMarkdown(entry.src);root.lastChild=parseMarkdown(markdown,root.lastChild),targetDiv.innerHTML+=root.generateEntity()}else if("img-card"===entry.type){root=BootstrapEntities.imgCard(entry.properties);let markdown=await getMarkdown(entry.src);root.lastChild=parseMarkdown(markdown,root.lastChild),targetDiv.innerHTML+=root.generateEntity()}else if("img-card-collapse"===entry.type){root=BootstrapEntities.imgCardCollapse(entry.properties);let markdown=await getMarkdown(entry.src);root.lastChild.lastChild=parseMarkdown(markdown,root.lastChild.lastChild),targetDiv.innerHTML+=root.generateEntity()}}}}}));